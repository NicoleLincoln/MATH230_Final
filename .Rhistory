color = "Team"
) +
theme_minimal()
fr$event <- data$event
fr$event <- data$event[season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015), ]
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015), ]
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
View(fr)
ggplot(fr, aes(x = season, y = seasons_between_new_holders, color = team)) +
geom_line(aes(group = interaction(team, event)), size = 1) +
geom_point() +
labs(
title = "Seasons Between New Record Holders Over Time",
x = "Season",
y = "Seasons Since Last Record",
color = "Team"
) +
theme_minimal()
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
ggplot(fr, aes(x = season, y = seasons_between_new_holders, color = team_colors)) +
geom_line(aes(group = interaction(team, event)), size = 1) +
geom_point() +
labs(
title = "Seasons Between New Record Holders Over Time",
x = "Season",
y = "Seasons Since Last Record",
color = "Team"
) +
theme_minimal()
ggplot(fr, aes(x = season, y = seasons_between_new_holders, color = teams)) +
geom_line(aes(group = interaction(team, event)), size = 1) +
geom_point() +
scale_color_manual(values = team_colors) +
labs(
title = "Seasons Between New Record Holders Over Time",
x = "Season",
y = "Seasons Since Last Record",
color = "Team"
) +
theme_minimal()
ggplot(fr, aes(x = season, y = seasons_between_new_holders, color = team)) +
geom_line(aes(group = interaction(team, event)), size = 1) +
geom_point() +
scale_color_manual(values = team_colors) +
labs(
title = "Seasons Between New Record Holders Over Time",
x = "Season",
y = "Seasons Since Last Record",
color = "Team"
) +
theme_minimal()
ggplot(fr, aes(x = season, y = seasons_between_new_holders, color = team)) +
geom_bar(aes(group = interaction(team, event)), size = 1) +
scale_color_manual(values = team_colors) +
labs(
title = "Seasons Between New Record Holders Over Time",
x = "Season",
y = "Seasons Since Last Record",
color = "Team"
) +
theme_minimal()
ggplot(fr, aes(x = season, y = seasons_between_new_holders, fill = team)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = team_colors) +
labs(
title = "Seasons Between New Record Holders Over Time",
x = "Season",
y = "Seasons Since Last Record",
fill = "Team"
) +
theme_minimal()
ggplot(fr, aes(x = reorder(team, -seasons_between_new_holders), y = seasons_between_new_holders, fill = team)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = team_colors) +
labs(
title = "Longest Gaps Between New Record Holders by Team",
x = "Team",
y = "Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -0.5, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
max_gaps <- fr %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
library(dplyr)
max_gaps <- fr %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -0.5, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -0.5, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(dplyr)
library(ggwordcloud)
library(png)
set.seed(42)
# Load image mask (make sure the path is correct)
img <- readPNG("Screenshot 2025-05-03 170640.png")
library(dplyr)
library(ggplot2)
library(ggwordcloud)
# Step 1: Filter for males only
male_data <- data %>%
filter(gender == "M")
# Step 2: Count records per team (optional if not used directly)
team_counts <- male_data %>%
count(team, name = "records_broken")
# Step 3: Create the word cloud
m= ggplot(
male_data,
aes(
label = team,
size = distance,
color = stroke
)
) +
geom_text_wordcloud_area(
aes(
angle = 45 * sample(
-2:2,
nrow(male_data),  # ✅ now matches filtered data
replace = TRUE,
prob = c(1, 1, 4, 1, 1)
)
),
mask = img,
rm_outside = TRUE
) +
scale_size_area(max_size = 25) +
theme_minimal() +
scale_color_manual(values = c(
"FR" = "#BF5700",
"BK" = "#003262",
"BR" = "#174A3B",
"FL" = "#461D7C",
"IM" = "#7BAFD4",
"Freestyle Relay" = "#BA0C2F",
"Medley Relay" = "#C99700"
))+
labs(title = "NCAA Male Swimmers' Records Broken By Event") +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5, family = "Helvetica"),  # Font settings
text = element_text(family = "Helvetica")  # Set default font family
)
ggsave("male_swimmers.png", plot = m, width = 8, height = 8, dpi = 300)
library(dplyr)
library(ggplot2)
library(ggwordcloud)
# Step 1: Filter for males only
female_data <- data %>%
filter(gender == "M")
# Step 2: Count records per team (optional if not used directly)
team_counts1 <- female_data %>%
count(team, name = "records_broken")
# Step 3: Create the word cloud
f=ggplot(
female_data,
aes(
label = team,
size = distance,
color = stroke
)
) +
geom_text_wordcloud_area(
aes(
angle = 45 * sample(
-2:2,
nrow(female_data),  # ✅ now matches filtered data
replace = TRUE,
prob = c(1, 1, 4, 1, 1)
)
),
mask = img,
rm_outside = TRUE
) +
scale_size_area(max_size = 25) +
theme_minimal() +
scale_color_manual(values = c(
"FR" = "#BF5700",
"BK" = "#003262",
"BR" = "#174A3B",
"FL" = "#461D7C",
"IM" = "#7BAFD4",
"Freestyle Relay" = "#BA0C2F",
"Medley Relay" = "#C99700"
))+
labs(title = "NCAA Female Swimmers' Records Broken By Event") +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5, family = "Helvetica"),  # Font settings
text = element_text(family = "Helvetica")  # Set default font family
)
ggsave("female_swimmers.png", plot = f, width = 8, height = 8, dpi = 300)
<div style="display: flex; justify-content: center; gap: 20px;">
library(dpylr)
library(dplyr)
library(dplyr)
<div style="display: flex; justify-content: center; gap: 20px;">
library(dplyr)
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
s=ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("season_swimmers.png", plot = s, width = 12, height = 12, dpi = 300)
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
expand_limits(y = 25)
library(dplyr)
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(size=14, angle = 45, hjust = 1))+
expand_limits(y = 25)+
theme(legend.position = "right", legend.justification = "center")+
theme(legend.position = c(1.2, 0.5))
library(dplyr)
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(size=5, angle = 45, hjust = 1))+
expand_limits(y = 25)+
theme(legend.position = "right", legend.justification = "center")+
theme(legend.position = c(1.2, 0.5))
library(dplyr)
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records",
fill = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
expand_limits(y = 25)+
theme(legend.position = "right", legend.justification = "center")+
theme(legend.position = c(1.2, 0.5))
library(dplyr)
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records"
) +
theme_minimal() +
theme(axis.text.x = element_text(size= 5, angle = 45, hjust = 1))+
expand_limits(y = 25)+
theme(legend.position = "right", legend.justification = "center")+
theme(legend.position = "none")
library(dplyr)
fr$event <- data$event[data$season %in% c(2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015)]
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records"
) +
theme_minimal() +
theme(axis.text.x = element_text(size= 9, angle = 45, hjust = 1))+
expand_limits(y = 25)+
theme(legend.position = "right", legend.justification = "center")+
theme(legend.position = "none")
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = ifelse(is.na(max(seasons_between_new_holders)), 0, max(seasons_between_new_holders)))
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records"
) +
theme_minimal() +
theme(axis.text.x = element_text(size= 9, angle = 45, hjust = 1))+
expand_limits(y = 25)+
theme(legend.position = "right", legend.justification = "center")+
theme(legend.position = "none")
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
max_gaps <- data %>%
group_by(team) %>%
summarise(max_gap = max(seasons_between_new_holders, na.rm = TRUE)) %>%
ungroup()
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records"
) +
theme_minimal() +
theme(axis.text.x = element_text(size= 9, angle = 45, hjust = 1))+
expand_limits(y = 25)+
theme(legend.position = "right", legend.justification = "center")+
theme(legend.position = "none")
max_gaps <- max_gaps %>%
mutate(max_gap = ifelse(is.infinite(max_gap), NA, max_gap))
ggplot(max_gaps, aes(x = reorder(team, -max_gap), y = max_gap, fill = team)) +
geom_bar(stat = "identity") +
geom_text(aes(label = max_gap), vjust = -1, size = 3) +  # <- This adds the numbers
scale_fill_manual(values = team_colors) +
labs(
title = "Maximum Seasons Between Records by Team",
x = "Team",
y = "Max Seasons Between Records"
) +
theme_minimal() +
theme(axis.text.x = element_text(size= 9, angle = 45, hjust = 1))+
expand_limits(y = 25)+
theme(legend.position = "right", legend.justification = "center")+
theme(legend.position = "none")+
scale_x_discrete(drop = TRUE)
knitr::opts_chunk$set(echo = FALSE)
ggplot(survey, aes(Pulse, Height)) +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey",  h = c(20, 25) )+
scale_fill_distiller(palette = "Blues")+
labs(title = "The Relationship Between Height and Pulse for Individuals")
ggplot(team_counts, aes(area = records_broken, fill = team, label = team)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center", grow = TRUE) +
scale_fill_manual(values = team_colors) +
labs(title = "Teams with NCAA Records Broken") +
theme_minimal()
library(ggplot2)
fm = data[gender == "F", ]
library(ggplot2)
fm = data[data$gender == "F", ]
library(ggplot2)
library(treemapify)
team_colors <- c(
"Arizona" = "#E87722",
"Arizona State" = "#8C1D40",
"Auburn" = "#0C234B",
"California" = "#003262",
"Colorado State" = "#174A3B",
"Florida" = "#FA4616",
"Georgia" = "#BA0C2F",
"Harvard" = "#A51C30",
"Indiana" = "#990000",
"LSU" = "#461D7C",
"Louisville" = "#AD0000",
"Michigan" = "#00274C",
"NC State" = "#CC0000",
"Nevada" = "#003366",
"Northwestern" = "#4E2A84",
"Notre Dame" = "#C99700",
"Southern California" = "#990000",
"Southern Methodist" = "#0033A0",
"Stanford" = "#8C1515",
"Tennessee" = "#FF8200",
"Texas" = "#BF5700",
"Texas A&M" = "#500000",
"UCLA" = "#2774AE",
"UNC" = "#7BAFD4",
"Virginia" = "#232D4B",
"Wisconsin" = "#C5050C"
)
teams <- c("Arizona", "Arizona State", "Auburn", "California", "Colorado State", "Florida", "Georgia", "Harvard",
"Indiana", "Louisville", "LSU", "Michigan", "NC State", "Nevada", "Northwestern", "Notre Dame",
"Southern California", "Southern Methodist", "Stanford", "Tennessee", "Texas", "Texas A&M", "UCLA",
"UNC", "Virginia", "Wisconsin")
records_broken <- c(22, 6, 28, 59, 1, 33, 21, 1, 10, 1, 1, 12, 6, 1, 2, 2, 5, 2, 46, 3, 38, 7, 1, 2, 22, 3)
team_counts <- data.frame(team = teams, records_broken = records_broken)
# Create a data frame
team_data <- data.frame(team = teams, records_broken = records_broken)
# Assuming 'team_counts' has a column 'team' for team names and 'n' for the number of records broken
ggplot(team_counts, aes(area = records_broken, fill = team, label = team)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center", grow = TRUE) +
scale_fill_manual(values = team_colors) +
labs(title = "Teams with NCAA Records Broken") +
theme_minimal()
file.create(".nojekyll")
